<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.openteach.qsync.core.goods.CommskuDao">
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="goods-Commsku-columns">
	    <![CDATA[
		`id` as `id`, `skucode` as `skucode`, `barcode` as `barcode`, `properties` as `properties`, `quantity` as `quantity`, `name` as `name`, `picurl` as `picurl`, `valid` as `valid`, `validdate` as `validdate`, `sellnum` as `sellnum`, `costprice` as `costprice`, `originalprice` as `originalprice`, `saleprice` as `saleprice`, `buyprice` as `buyprice`, `score` as `score`, `listorder` as `listorder`, `isdeleted` as `isdeleted`, `source` as `source`, `item_id` as `itemId`, `isprice` as `isprice`, `shop_id` as `shopId`, `creatoradmin` as `creatoradmin`, `modifieradmin` as `modifieradmin`, `createdatetime` as `createdatetime`, `updatedatetime` as `updatedatetime`, `comment` as `comment`, `good` as `good`, `comm` as `comm`, `bad` as `bad`, `stock` as `stock`
	    ]]>
	</sql>	

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="save" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
        INSERT INTO cc_kata_kplus_commsku (
        `id`, `skucode`, `barcode`, `properties`, `quantity`, `name`, `picurl`, `valid`, `validdate`, `sellnum`, `costprice`, `originalprice`, `saleprice`, `buyprice`, `score`, `listorder`, `isdeleted`, `source`, `item_id`, `isprice`, `shop_id`, `creatoradmin`, `modifieradmin`, `createdatetime`, `updatedatetime`, `comment`, `good`, `comm`, `bad`, `stock`
        ) VALUES (
        #{id}, #{skucode}, #{barcode}, #{properties}, #{quantity}, #{name}, #{picurl}, #{valid}, #{validdate}, #{sellnum}, #{costprice}, #{originalprice}, #{saleprice}, #{buyprice}, #{score}, #{listorder}, #{isdeleted}, #{source}, #{itemId}, #{isprice}, #{shopId}, #{creatoradmin}, #{modifieradmin}, #{createdatetime}, #{updatedatetime}, #{comment}, #{good}, #{comm}, #{bad}, #{stock}        
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="update">
    <![CDATA[
        UPDATE cc_kata_kplus_commsku SET
	        `skucode` = #{skucode} , `barcode` = #{barcode} , `properties` = #{properties} , `quantity` = #{quantity} , `name` = #{name} , `picurl` = #{picurl} , `valid` = #{valid} , `validdate` = #{validdate} , `sellnum` = #{sellnum} , `costprice` = #{costprice} , `originalprice` = #{originalprice} , `saleprice` = #{saleprice} , `buyprice` = #{buyprice} , `score` = #{score} , `listorder` = #{listorder} , `isdeleted` = #{isdeleted} , `source` = #{source} , `item_id` = #{itemId} , `isprice` = #{isprice} , `shop_id` = #{shopId} , `creatoradmin` = #{creatoradmin} , `modifieradmin` = #{modifieradmin} , `createdatetime` = #{createdatetime} , `updatedatetime` = #{updatedatetime} , `comment` = #{comment} , `good` = #{good} , `comm` = #{comm} , `bad` = #{bad} , `stock` = #{stock}  
        WHERE 
        	id = #{id}  	        
    ]]>
	</update>

    <delete id="deleteById">
    <![CDATA[
        DELETE FROM cc_kata_kplus_commsku WHERE
        `id` = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultType="Commsku">
		SELECT <include refid="goods-Commsku-columns" />
	    <![CDATA[
		    FROM cc_kata_kplus_commsku 
	        WHERE 
		        `id` = #{id} 
	    ]]>
	</select>
	
	<sql id="Commsku-where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
	       <if test="id">
				AND `id` = #{id}
			</if>
	       <if test="skucode">
				AND `skucode` = #{skucode}
			</if>
	       <if test="barcode">
				AND `barcode` = #{barcode}
			</if>
	       <if test="properties">
				AND `properties` = #{properties}
			</if>
	       <if test="quantity">
				AND `quantity` = #{quantity}
			</if>
	       <if test="name">
				AND `name` = #{name}
			</if>
	       <if test="picurl">
				AND `picurl` = #{picurl}
			</if>
	       <if test="valid">
				AND `valid` = #{valid}
			</if>
	       <if test="validdateBegin != null">
				AND `validdate` >= #{validdateBegin}
		   </if>
		   <if test="validdateEnd != null">
				AND `validdate` &lt;= #{validdateEnd}
		   </if>
	       <if test="sellnum">
				AND `sellnum` = #{sellnum}
			</if>
	       <if test="costprice">
				AND `costprice` = #{costprice}
			</if>
	       <if test="originalprice">
				AND `originalprice` = #{originalprice}
			</if>
	       <if test="saleprice">
				AND `saleprice` = #{saleprice}
			</if>
	       <if test="buyprice">
				AND `buyprice` = #{buyprice}
			</if>
	       <if test="score">
				AND `score` = #{score}
			</if>
	       <if test="listorder">
				AND `listorder` = #{listorder}
			</if>
	       <if test="isdeleted">
				AND `isdeleted` = #{isdeleted}
			</if>
	       <if test="source">
				AND `source` = #{source}
			</if>
	       <if test="itemId">
				AND `item_id` = #{itemId}
			</if>
	       <if test="isprice">
				AND `isprice` = #{isprice}
			</if>
	       <if test="shopId">
				AND `shop_id` = #{shopId}
			</if>
	       <if test="creatoradmin">
				AND `creatoradmin` = #{creatoradmin}
			</if>
	       <if test="modifieradmin">
				AND `modifieradmin` = #{modifieradmin}
			</if>
	       <if test="createdatetimeBegin != null">
				AND `createdatetime` >= #{createdatetimeBegin}
		   </if>
		   <if test="createdatetimeEnd != null">
				AND `createdatetime` &lt;= #{createdatetimeEnd}
		   </if>
	       <if test="updatedatetimeBegin != null">
				AND `updatedatetime` >= #{updatedatetimeBegin}
		   </if>
		   <if test="updatedatetimeEnd != null">
				AND `updatedatetime` &lt;= #{updatedatetimeEnd}
		   </if>
	       <if test="comment">
				AND `comment` = #{comment}
			</if>
	       <if test="good">
				AND `good` = #{good}
			</if>
	       <if test="comm">
				AND `comm` = #{comm}
			</if>
	       <if test="bad">
				AND `bad` = #{bad}
			</if>
	       <if test="stock">
				AND `stock` = #{stock}
			</if>
		</where>
	</sql>
		
    <select id="count" resultType="long">
        SELECT count(*) FROM cc_kata_kplus_commsku 
		<include refid="Commsku-where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultType="Commsku">
    	SELECT <include refid="goods-Commsku-columns" />
	    FROM cc_kata_kplus_commsku 
		<include refid="Commsku-where"/>
		
		<if test="sortColumns != null">
			ORDER BY ${sortColumns}
		</if>
    </select>
	
	<select id="list" resultType="Commsku">
    	SELECT <include refid="goods-Commsku-columns" />
	    FROM cc_kata_kplus_commsku 
		<include refid="Commsku-where"/>
		
		<if test="sortColumns != null">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
</mapper>

