<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.openteach.qsync.core.order.FinalstatementDao">
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="order-Finalstatement-columns">
	    <![CDATA[
		`id` as `id`, `code` as `code`, `suppliercode` as `suppliercode`, `suppliername` as `suppliername`, `isfinal` as `isfinal`, `totalamount` as `totalamount`, `ccshop_id` as `ccshopId`, `createDatetime` as `createDatetime`, `updatedatetime` as `updatedatetime`, `isdeleted` as `isdeleted`, `iscomplete` as `iscomplete`, `operatepeople` as `operatepeople`, `modeifier` as `modeifier`
	    ]]>
	</sql>	

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="save" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
        INSERT INTO cc_kata_kplus_finalstatement (
        `id`, `code`, `suppliercode`, `suppliername`, `isfinal`, `totalamount`, `ccshop_id`, `createDatetime`, `updatedatetime`, `isdeleted`, `iscomplete`, `operatepeople`, `modeifier`
        ) VALUES (
        #{id}, #{code}, #{suppliercode}, #{suppliername}, #{isfinal}, #{totalamount}, #{ccshopId}, #{createDatetime}, #{updatedatetime}, #{isdeleted}, #{iscomplete}, #{operatepeople}, #{modeifier}        
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="update">
    <![CDATA[
        UPDATE cc_kata_kplus_finalstatement SET
	        `code` = #{code} , `suppliercode` = #{suppliercode} , `suppliername` = #{suppliername} , `isfinal` = #{isfinal} , `totalamount` = #{totalamount} , `ccshop_id` = #{ccshopId} , `createDatetime` = #{createDatetime} , `updatedatetime` = #{updatedatetime} , `isdeleted` = #{isdeleted} , `iscomplete` = #{iscomplete} , `operatepeople` = #{operatepeople} , `modeifier` = #{modeifier}  
        WHERE 
        	id = #{id}  	        
    ]]>
	</update>

    <delete id="deleteById">
    <![CDATA[
        DELETE FROM cc_kata_kplus_finalstatement WHERE
        `id` = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultType="Finalstatement">
		SELECT <include refid="order-Finalstatement-columns" />
	    <![CDATA[
		    FROM cc_kata_kplus_finalstatement 
	        WHERE 
		        `id` = #{id} 
	    ]]>
	</select>
	
	<sql id="Finalstatement-where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
	       <if test="id">
				AND `id` = #{id}
			</if>
	       <if test="code">
				AND `code` = #{code}
			</if>
	       <if test="suppliercode">
				AND `suppliercode` = #{suppliercode}
			</if>
	       <if test="suppliername">
				AND `suppliername` = #{suppliername}
			</if>
	       <if test="isfinal">
				AND `isfinal` = #{isfinal}
			</if>
	       <if test="totalamount">
				AND `totalamount` = #{totalamount}
			</if>
	       <if test="ccshopId">
				AND `ccshop_id` = #{ccshopId}
			</if>
	       <if test="createDatetimeBegin != null">
				AND `createDatetime` >= #{createDatetimeBegin}
		   </if>
		   <if test="createDatetimeEnd != null">
				AND `createDatetime` &lt;= #{createDatetimeEnd}
		   </if>
	       <if test="updatedatetimeBegin != null">
				AND `updatedatetime` >= #{updatedatetimeBegin}
		   </if>
		   <if test="updatedatetimeEnd != null">
				AND `updatedatetime` &lt;= #{updatedatetimeEnd}
		   </if>
	       <if test="isdeleted">
				AND `isdeleted` = #{isdeleted}
			</if>
	       <if test="iscomplete">
				AND `iscomplete` = #{iscomplete}
			</if>
	       <if test="operatepeople">
				AND `operatepeople` = #{operatepeople}
			</if>
	       <if test="modeifier">
				AND `modeifier` = #{modeifier}
			</if>
		</where>
	</sql>
		
    <select id="count" resultType="long">
        SELECT count(*) FROM cc_kata_kplus_finalstatement 
		<include refid="Finalstatement-where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultType="Finalstatement">
    	SELECT <include refid="order-Finalstatement-columns" />
	    FROM cc_kata_kplus_finalstatement 
		<include refid="Finalstatement-where"/>
		
		<if test="sortColumns != null">
			ORDER BY ${sortColumns}
		</if>
    </select>
	
	<select id="list" resultType="Finalstatement">
    	SELECT <include refid="order-Finalstatement-columns" />
	    FROM cc_kata_kplus_finalstatement 
		<include refid="Finalstatement-where"/>
		
		<if test="sortColumns != null">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
</mapper>

